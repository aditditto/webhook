// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rancher/wrangler/pkg/generated/controllers/rbac/v1 (interfaces: RoleBindingCache)

// Package fakes is a generated GoMock package.
package fakes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/rancher/wrangler/pkg/generated/controllers/rbac/v1"
	v10 "k8s.io/api/rbac/v1"
	labels "k8s.io/apimachinery/pkg/labels"
)

// MockRoleBindingCache is a mock of RoleBindingCache interface.
type MockRoleBindingCache struct {
	ctrl     *gomock.Controller
	recorder *MockRoleBindingCacheMockRecorder
}

// MockRoleBindingCacheMockRecorder is the mock recorder for MockRoleBindingCache.
type MockRoleBindingCacheMockRecorder struct {
	mock *MockRoleBindingCache
}

// NewMockRoleBindingCache creates a new mock instance.
func NewMockRoleBindingCache(ctrl *gomock.Controller) *MockRoleBindingCache {
	mock := &MockRoleBindingCache{ctrl: ctrl}
	mock.recorder = &MockRoleBindingCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoleBindingCache) EXPECT() *MockRoleBindingCacheMockRecorder {
	return m.recorder
}

// AddIndexer mocks base method.
func (m *MockRoleBindingCache) AddIndexer(arg0 string, arg1 v1.RoleBindingIndexer) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddIndexer", arg0, arg1)
}

// AddIndexer indicates an expected call of AddIndexer.
func (mr *MockRoleBindingCacheMockRecorder) AddIndexer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddIndexer", reflect.TypeOf((*MockRoleBindingCache)(nil).AddIndexer), arg0, arg1)
}

// Get mocks base method.
func (m *MockRoleBindingCache) Get(arg0, arg1 string) (*v10.RoleBinding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*v10.RoleBinding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockRoleBindingCacheMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockRoleBindingCache)(nil).Get), arg0, arg1)
}

// GetByIndex mocks base method.
func (m *MockRoleBindingCache) GetByIndex(arg0, arg1 string) ([]*v10.RoleBinding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIndex", arg0, arg1)
	ret0, _ := ret[0].([]*v10.RoleBinding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIndex indicates an expected call of GetByIndex.
func (mr *MockRoleBindingCacheMockRecorder) GetByIndex(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIndex", reflect.TypeOf((*MockRoleBindingCache)(nil).GetByIndex), arg0, arg1)
}

// List mocks base method.
func (m *MockRoleBindingCache) List(arg0 string, arg1 labels.Selector) ([]*v10.RoleBinding, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].([]*v10.RoleBinding)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockRoleBindingCacheMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockRoleBindingCache)(nil).List), arg0, arg1)
}
